{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","classes","dialog","active","src","id","activeClassName","name","Message","message","maxLength50","maxLengthCreator","AddMessageForm","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","AddMessageFormRedux","reduxForm","form","Dialogs","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","dialogsItems","values","addMessage","newMessageBody","compose","dispatch","addMessageActionCreator"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,+ICG3KC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADG,kBAAC,IAAD,CAAUC,GAAG,eAJT,GAEXC,IAAML,WAOtC,OADqCM,YAAQX,EAARW,CAAoCL,K,+FCJ9DM,EATI,SAACJ,GAChB,OACI,yBAAKK,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,yBAAKC,IAAI,yFACT,kBAAC,IAAD,CAASR,GAAI,YAAcD,EAAMU,GAAIC,gBAAiBL,IAAQE,QAASR,EAAMY,QCC1EC,EANC,SAACb,GACb,OACI,yBAAKK,UAAWC,IAAQQ,SAAUd,EAAMc,U,iCCA1CC,EAAeC,YAAiB,IAkBvBC,EAhBQ,SAACjB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CACIR,KAAO,iBACPS,UAAWC,IACXC,SAAU,CAACC,IAAUT,GACrBU,YAAY,wBAEpB,6BACI,2CCgBVC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,CAAyCV,GACtDY,EA3BC,SAAC7B,GAEb,IAAIP,EAAQO,EAAM8B,YAEdC,EAAkBtC,EAAMuC,QAAQC,KAAI,SAAA1B,GAAM,OAAI,kBAAC,EAAD,CAAYK,KAAML,EAAOK,KAAMsB,IAAK3B,EAAOG,GAAIA,GAAIH,EAAOG,QAExGyB,EAAmB1C,EAAM2C,SAASH,KAAI,SAAAnB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASoB,IAAKpB,EAAQJ,GAAIA,GAAII,EAAQJ,QAMrH,OACI,yBAAKL,UAAWC,IAAQ0B,SACpB,yBAAK3B,UAAWC,IAAQ+B,cACnBN,GAEL,yBAAK1B,UAAWC,IAAQ8B,UACpB,6BAAMD,GACN,kBAACT,EAAD,CAAqBR,SAXb,SAACoB,GACjBtC,EAAMuC,WAAWD,EAAOE,sB,wBCKjBC,sBACXtC,aAfoB,SAACV,GACrB,MAAO,CACHqC,YAAarC,EAAMqC,gBAIA,SAACY,GACxB,MAAO,CACHH,WAAY,SAACC,GACTE,EAASC,YAAwBH,SAOzC5C,IAFW6C,CAGbZ","file":"static/js/4.58963895.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__36u7U\",\"dialogsItems\":\"Dialogs_dialogsItems__1IiGM\",\"active\":\"Dialogs_active__2Jh6t\",\"dialog\":\"Dialogs_dialog__2bL50\",\"messages\":\"Dialogs_messages__1xLqD\"};","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return  <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img src='https://www.robinwieruch.de/static/63fc17d2f237ae4c3f61073a0436cf81/2b1a3/banner.jpg'/>\r\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 =  maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name = \"newMessageBody\"\r\n                    component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nexport default AddMessageForm;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n\r\n    let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id} id={message.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm);\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}