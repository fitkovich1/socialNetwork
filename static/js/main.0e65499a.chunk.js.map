{"version":3,"sources":["components/Navbar/Navbar.module.css","assets/images/user.jpg","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Friends/Friends.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/login.jsx","App.jsx","index.js","components/Friends/Friends.module.css","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","console","warn","profileAPI","getProfile","authAPI","email","password","rememberMe","getStatus","updateStatus","status","put","initialState","posts","id","message","likesCount","autor","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","dialogs","name","messages","dialogsReducer","body","newMessageBody","sidebarReducer","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","usersReducer","map","u","followed","filter","login","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","resultCode","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Friends","className","classes","container","avatar","imgName","src","alt","Navbar","props","nav","item","to","activeClassName","active","friends","News","Music","Settings","DialogItem","dialog","Message","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","child","hasError","touched","error","styles","formControl","children","Textarea","restProps","Input","maxLength50","AddMessageForm","onSubmit","handleSubmit","Field","component","validate","placeholder","AddMessageFormRedux","reduxForm","Dialogs","dialogsElements","key","messagesElements","dialogsItems","values","addMessage","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","addMessageActionCreator","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onClick","e","onPageChanged","usersAvatar","photos","small","userPhoto","disabled","some","unfollow","follow","usersInfo","fullNameAndStatus","Preloader","preloader","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","page","items","totalCount","followSuccess","unfollowSuccess","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","currentTarget","prevProps","prevState","snapshot","onChange","onBlur","autoFocus","onDoubleClick","ProfileInfo","descriptionBlock","large","Post","maxLength10","AddNewPostForm","MyPosts","postsElements","postsBlock","addPost","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","history","getUserProfile","withRouter","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","App","initializeApp","path","render","DialogsContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e65499a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2o54H\",\"item\":\"Navbar_item__1kr_S\",\"active\":\"Navbar_active__2LXrb\",\"friends\":\"Navbar_friends__XvShx\"};","module.exports = __webpack_public_path__ + \"static/media/user.ea7658a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.db6878e8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__111i7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__36u7U\",\"dialogsItems\":\"Dialogs_dialogsItems__1IiGM\",\"active\":\"Dialogs_active__2Jh6t\",\"dialog\":\"Dialogs_dialog__2bL50\",\"messages\":\"Dialogs_messages__1xLqD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__dWEjg\",\"container\":\"Users_container__3_5nz\",\"userPhoto\":\"Users_userPhoto__2ONAc\",\"fullNameAndStatus\":\"Users_fullNameAndStatus__315q-\",\"location\":\"Users_location__1PsIW\",\"usersInfo\":\"Users_usersInfo__1McMf\",\"usersAvatar\":\"Users_usersAvatar__3e4OM\",\"selectedPage\":\"Users_selectedPage__38bZ3\",\"pages\":\"Users_pages__1nCiH\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'edd25c6c-92b4-48d9-95c2-52b239caae08'\r\n    }\r\n});\r\n\r\nexport  const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n        )\r\n    },\r\n    follow(userId) {\r\n       return  (\r\n           instance.post(`follow/${userId}`)\r\n       )\r\n    },\r\n    unfollow(userId) {\r\n       return (\r\n           instance.delete(`follow/${userId}`)\r\n       )\r\n    },\r\n    getProfile (userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport  const authAPI = {\r\n    me() {\r\n        return (\r\n            instance.get(`auth/me/`)\r\n        );\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return (\r\n            instance.post(`auth/login/`, {email, password, rememberMe})\r\n        );\r\n    },\r\n    logout() {\r\n        return (\r\n            instance.delete(`auth/login/`)\r\n        );\r\n    },\r\n\r\n};\r\n\r\nexport  const profileAPI = {\r\n    getProfile (userId) {\r\n        return (\r\n            instance.get(`profile/` + userId)\r\n        )\r\n    },\r\n    getStatus(userId) {\r\n        return (\r\n            instance.get(`profile/status/` + userId)\r\n        )\r\n    },\r\n    updateStatus (status) {\r\n        return (\r\n            instance.put(`profile/status/`, {status: status})\r\n        )\r\n    }\r\n};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState =\r\n    {\r\n        posts: [\r\n            {id: 1, message: 'Hi, how are you feeling?', likesCount: 15, autor: \"Kolya\"},\r\n            {id: 2, message: 'Nice to meet you, bro', likesCount: 20, autor: \"Dima\"},\r\n            {id: 3, message: 'I love you my darling', likesCount: 5, autor: \"Sveta\"}\r\n        ],\r\n        profile: null,\r\n        status: ''\r\n    };\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            let newPost = {id: 4, message: action.newPostText, likesCount: 0, autor: \"Misha\"};\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        case 'SET_STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case 'SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    };\r\n};\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    };\r\n};\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    };\r\n};\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response.data));\r\n            });\r\n    }\r\n};\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(setStatus(response.data));\r\n            });\r\n    }\r\n};\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setStatus(status));\r\n                }\r\n            });\r\n    }\r\n};\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Kolya'},\r\n        {id: 2, name: 'Sveta'},\r\n        {id: 3, name: 'Dimych'},\r\n        {id: 4, name: 'Maksim'},\r\n        {id: 5, name: 'Dasha'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi, men!!!'},\r\n        {id: 2, message: 'Kate loves my hair!'},\r\n        {id: 3, message: 'YO, come on!'},\r\n        {id: 4, message: 'WOW, you are amazing!'},\r\n        {id: 5, message: 'Fuck your self, motherfucker'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-MESSAGE':\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageBody\r\n    };\r\n};\r\nexport default dialogsReducer;","\r\nlet initialState = {};\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState =\r\n    {\r\n        users: [],\r\n        pageSize: 30,\r\n        totalUsersCount: 0,\r\n        currentPage: 1,\r\n        isFetching: false,\r\n        followingInProgress: []\r\n    };\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    };\r\n};\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    };\r\n};\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    };\r\n};\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n};\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUsersCount\r\n    }\r\n};\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n};\r\nexport const toggleFollowingInProgress = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n};\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    };\r\n};\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                    if (response.data.resultCode === 0) {\r\n                        dispatch(followSuccess(userId));\r\n                    }\r\n                    dispatch(toggleFollowingInProgress(false, userId));\r\n                }\r\n            )\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                    if (response.data.resultCode === 0) {\r\n                        dispatch(unfollowSuccess(userId));\r\n                    }\r\n                    dispatch(toggleFollowingInProgress(false, userId));\r\n                })\r\n    }\r\n};\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState =\r\n    {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth: false\r\n    };\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n              ...state,\r\n                ...action.payload\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id,email,login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {email, id, login, isAuth}\r\n    };\r\n};\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n       return authAPI.me()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, email, login} = response.data.data;\r\n                    dispatch(setAuthUserData(id, email, login, true));\r\n                }\r\n            });\r\n    };\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n        authAPI.login(email,password,rememberMe)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                   dispatch(getAuthUserData())\r\n                } else {\r\n                    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                    dispatch(stopSubmit(\"login\", {_error: message}));\r\n                }\r\n            });\r\n    };\r\n\r\nexport const logout = () => (dispatch) => {\r\n        authAPI.logout()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthUserData(null, null, null, false));\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState =\r\n    {\r\n        initialized: false\r\n    };\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS\r\n    };\r\n};\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\"\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default  store;","import React from 'react';\r\nimport classes from './Friends.module.css';\r\n\r\nconst Friends = () => {\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.avatar}>\r\n            <div className={classes.imgName}>\r\n                <img src=\"http://cm1.narvii.com/7137/82dfdf5249f75571554874c604090c0c3a261c1e_00.jpg\" alt=\"Аватар\"/>\r\n                <div><span>Nima</span></div>\r\n            </div>\r\n            </div>\r\n            <div className={classes.avatar}>\r\n                <div className={classes.imgName}>\r\n                    <img src=\"http://cm1.narvii.com/7137/82dfdf5249f75571554874c604090c0c3a261c1e_00.jpg\" alt=\"Аватар\"/>\r\n                    <div><span>Kolya</span></div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.avatar}>\r\n                <div className={classes.imgName}>\r\n                    <img src=\"http://cm1.narvii.com/7137/82dfdf5249f75571554874c604090c0c3a261c1e_00.jpg\" alt=\"Аватар\"/>\r\n                    <div><span>Ibragim</span></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default Friends;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"../Friends/Friends\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.active}> Messages </NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.friends}>\r\n                <NavLink to=\"/friends\" activeClassName={classes.active}>Friends:</NavLink>\r\n                    <Friends/>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Navbar;","import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from \"react\";\r\nimport classes from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img src='https://www.robinwieruch.de/static/63fc17d2f237ae4c3f61073a0436cf81/2b1a3/banner.jpg'/>\r\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","\r\n\r\nexport const  required = (value) => {\r\n  if(value) return undefined;\r\n\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n};","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const FormControl = ({input,meta,child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input,meta,child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input,meta,child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 =  maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name = \"newMessageBody\"\r\n                    component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nexport default AddMessageForm;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n\r\n    let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id} id={message.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm);\r\nexport default Dialogs;","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return  <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div className={styles.users}>\r\n            <div className={styles.pages}>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p && styles.selectedPage}\r\n                                 onClick={(e) => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n                    <div className={styles.container}>\r\n                        <div className={styles.usersAvatar}>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + u.id}>\r\n                                    <img src={u.photos.small !== null ? u.photos.small : userPhoto}\r\n                                         className={styles.userPhoto}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                {u.followed\r\n                                    ? <button\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {props.unfollow(u.id)}}>Unfollow </button>\r\n                                    : <button\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {props.follow(u.id)}}>Follow</button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.usersInfo}>\r\n                            <div className={styles.fullNameAndStatus}>\r\n                                <span>{u.name}</span>\r\n                                <span>{u.status}</span>\r\n                            </div>\r\n                            <div className={styles.location}>\r\n                                <span>{/*{\"u.location.country\"} */} Minsk</span>\r\n                                <span>{/*{\"u.location.city\"}*/}Belarus</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}/>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Preloader;"," export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\n export const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n export const getTotalUsersCount = (state) => {\r\n     return state.usersPage.totalUsersCount\r\n};\r\nexport const getCurrentPage = (state) => {\r\n     return state.usersPage.currentPage\r\n};\r\nexport const getIsFetching = (state) => {\r\n     return state.usersPage.isFetching\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n     return state.usersPage.followingInProgress\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress, unfollow,\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                followingInProgress={this.props.followingInProgress}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n};\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    };\r\n};*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    };\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setCurrentPage, toggleFollowingInProgress, getUsers: requestUsers, follow, unfollow}))(UsersContainer);\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode\r\n                    ?\r\n                        <div>\r\n                            <span onDoubleClick={this.activateEditMode}>{this.props.status || \"----\"}</span>\r\n                        </div>\r\n                    :\r\n                        <div>\r\n                            <input\r\n                                onChange={this.onStatusChange}\r\n                                onBlur={this.deactivateEditMode}\r\n                                value={this.state.status}\r\n                                autoFocus={true}\r\n                            />\r\n                        </div>\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            {/*<div>\r\n                <img\r\n                    src=\"https://i.mycdn.me/image?id=887811879088&ts=000000000000b303ae&plc=WEB&tkn=*LgV_StN1kbinDLlMPUikx_HeW8M&fn=sqr_288\"/>\r\n            </div>*/}\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={classes.item}>\r\n        <span>{props.autor}</span>\r\n        <img src='https://sumopaint.com/images/icon.png'/>\r\n        {props.message}\r\n        <div>\r\n            <span>like</span>\r\n            {props.likesCount}\r\n        </div>\r\n    </div>\r\n\r\n};\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map(post => <Post message={post.message}\r\n                                                      likesCount={post.likesCount}\r\n                                                      autor={post.autor}\r\n                                                      id={post.id}/>);\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return <div className={classes.postsBlock}>\r\n        <h3>my Posts</h3>\r\n\r\n        <AddNewPostForm onSubmit={onAddPost}/>\r\n\r\n        <div className={classes.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name=\"newPostText\"\r\n                    component={Textarea}\r\n                    placeholder={\"Post message\"}\r\n                    validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n    <div>\r\n        <ProfileInfo profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}\r\n        />\r\n        <MyPostsContainer\r\n            store={props.store}\r\n        />\r\n    </div>\r\n    );\r\n};\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        debugger\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;        // как то зарефакторил но неправильно скорее всего\r\n            if(!userId) {                               // У димыча эта ХУЙНЯ работаетб а у меня вылетает какой то пиздец дикий\r\n                this.props.history.push(\"/login\");     // хуй пойми какая то поебень ненужная блять\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,  // спросить и проверить какой айди\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n        <img src=\"http://up.desktx.net/pic_360/78/07/81/7807811d1ca6044bb826cf19f33d8cc4.jpg\"/>\r\n        <div className={classes.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n};\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name={\"email\"}\r\n                    placeholder={\"Email\"}\r\n                    validate={[required]}\r\n                    component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    name={\"password\"}\r\n                    placeholder={\"Password\"}\r\n                    type={\"password\"}\r\n                    validate={[required]}\r\n                    component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n            {\r\n                props.error && <div className={styles.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if(!this.props.initialized){\n            return  <Preloader />\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <LoginPage/>}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>({\n    initialized: state.app.initialized\n});\n\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgName\":\"Friends_imgName__1jAC8\",\"container\":\"Friends_container__xsiPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__poJqh\",\"error\":\"FormsControls_error__2dKzt\",\"formSummaryError\":\"FormsControls_formSummaryError__2zhWq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3FLst\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2BQvk\",\"posts\":\"MyPosts_posts__3qXmg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3scgo\",\"loginBlock\":\"Header_loginBlock__2w9Xw\"};"],"sourceRoot":""}