{"version":3,"sources":["components/Navbar/Navbar.module.css","assets/images/user.jpg","api/api.js","redux/dialogs-reducer.js","assets/images/preloader.svg","components/Users/Users.module.css","serviceWorker.js","components/Friends/Friends.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/Users/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.jsx","index.js","components/Friends/Friends.module.css","components/common/FormsControls/FormsControls.jsx","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","authAPI","me","login","email","password","rememberMe","logout","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","initialState","dialogs","id","name","messages","message","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","body","Boolean","window","location","hostname","match","Friends","className","classes","container","avatar","imgName","src","alt","Navbar","props","nav","item","to","activeClassName","active","friends","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","usersAvatar","photos","small","userPhoto","disabled","some","usersInfo","fullNameAndStatus","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","page","totalCount","bind","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeApp","fallback","path","render","component","AppContainer","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","text","validate","preloader","value","maxLengthCreator","maxLength","posts","likesCount","autor","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","file","newPost","postId"],"mappings":"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","file":"static/js/main.19ad7182.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2o54H\",\"item\":\"Navbar_item__1kr_S\",\"active\":\"Navbar_active__2LXrb\",\"friends\":\"Navbar_friends__XvShx\"};","module.exports = __webpack_public_path__ + \"static/media/user.ea7658a6.jpg\";","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'edd25c6c-92b4-48d9-95c2-52b239caae08'\r\n    }\r\n});\r\n\r\nexport  const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n        )\r\n    },\r\n    follow(userId) {\r\n       return  (\r\n           instance.post(`follow/${userId}`)\r\n       )\r\n    },\r\n    unfollow(userId) {\r\n       return (\r\n           instance.delete(`follow/${userId}`)\r\n       )\r\n    },\r\n    getProfile (userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport  const authAPI = {\r\n    me() {\r\n        return (\r\n            instance.get(`auth/me/`)\r\n        );\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return (\r\n            instance.post(`auth/login/`, {email, password, rememberMe})\r\n        );\r\n    },\r\n    logout() {\r\n        return (\r\n            instance.delete(`auth/login/`)\r\n        );\r\n    },\r\n\r\n};\r\n\r\nexport  const profileAPI = {\r\n    getProfile (userId) {\r\n        return (\r\n            instance.get(`profile/` + userId)\r\n        )\r\n    },\r\n    getStatus(userId) {\r\n        return (\r\n            instance.get(`profile/status/` + userId)\r\n        )\r\n    },\r\n    updateStatus (status) {\r\n        return (\r\n            instance.put(`profile/status/`, {status: status})\r\n        )\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return(\r\n            instance.put('profile/photo', formData, {\r\n                headers:{\r\n                    'Content-type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    }\r\n};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Kolya'},\r\n        {id: 2, name: 'Sveta'},\r\n        {id: 3, name: 'Dimych'},\r\n        {id: 4, name: 'Maksim'},\r\n        {id: 5, name: 'Dasha'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi, men!!!'},\r\n        {id: 2, message: 'Kate loves my hair!'},\r\n        {id: 3, message: 'YO, come on!'},\r\n        {id: 4, message: 'WOW, you are amazing!'},\r\n        {id: 5, message: 'Fuck your self, motherfucker'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-MESSAGE':\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageBody\r\n    };\r\n};\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.db6878e8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__dWEjg\",\"container\":\"Users_container__3_5nz\",\"userPhoto\":\"Users_userPhoto__2ONAc\",\"fullNameAndStatus\":\"Users_fullNameAndStatus__315q-\",\"location\":\"Users_location__1PsIW\",\"usersInfo\":\"Users_usersInfo__1McMf\",\"usersAvatar\":\"Users_usersAvatar__3e4OM\",\"paginator\":\"Users_paginator__3MnIh\",\"pageNumber\":\"Users_pageNumber__22yHP\",\"selectedPage\":\"Users_selectedPage__38bZ3\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport classes from './Friends.module.css';\r\n\r\nconst Friends = () => {\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.avatar}>\r\n            <div className={classes.imgName}>\r\n                <img src=\"http://cm1.narvii.com/7137/82dfdf5249f75571554874c604090c0c3a261c1e_00.jpg\" alt=\"Аватар\"/>\r\n                <div><span>Nima</span></div>\r\n            </div>\r\n            </div>\r\n            <div className={classes.avatar}>\r\n                <div className={classes.imgName}>\r\n                    <img src=\"http://cm1.narvii.com/7137/82dfdf5249f75571554874c604090c0c3a261c1e_00.jpg\" alt=\"Аватар\"/>\r\n                    <div><span>Kolya</span></div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.avatar}>\r\n                <div className={classes.imgName}>\r\n                    <img src=\"http://cm1.narvii.com/7137/82dfdf5249f75571554874c604090c0c3a261c1e_00.jpg\" alt=\"Аватар\"/>\r\n                    <div><span>Ibragim</span></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default Friends;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"../Friends/Friends\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.active}> Messages </NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.friends}>\r\n                <NavLink to=\"/friends\" activeClassName={classes.active}>Friends:</NavLink>\r\n                    <Friends/>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Navbar;","import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from \"react\";\r\nimport classes from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) =>  {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState =\r\n    {\r\n        users: [],\r\n        pageSize: 10,\r\n        totalUsersCount: 0,\r\n        currentPage: 1,\r\n        isFetching: false,\r\n        followingInProgress: []\r\n    };\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    };\r\n};\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    };\r\n};\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    };\r\n};\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n};\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUsersCount\r\n    }\r\n};\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n};\r\nexport const toggleFollowingInProgress = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Users.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\ndebugger\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>Prev</button>\r\n            }\r\n\r\n            {\r\n                pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((p) => {return <span className={ cn ({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\r\n                                              key={p} onClick={(e) => {onPageChanged(p)}}>{p}</span>})}\r\n            {\r\n                portionCount > portionNumber &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>Next</button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow}) => {\r\n    return (<div>\r\n            <div className={styles.container}>\r\n                <div className={styles.usersAvatar}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                                 className={styles.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button\r\n                                disabled={followingInProgress.some(id => id === user.id)}\r\n                                onClick={() => {\r\n                                    unfollow(user.id)\r\n                                }}>Unfollow </button>\r\n                            : <button\r\n                                disabled={followingInProgress.some(id => id === user.id)}\r\n                                onClick={() => {\r\n                                    follow(user.id)\r\n                                }}>Follow</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={styles.usersInfo}>\r\n                    <div className={styles.fullNameAndStatus}>\r\n                        <span>{user.name}</span>\r\n                        <span>{user.status}</span>\r\n                    </div>\r\n                    <div className={styles.location}>\r\n                        <span>{/*{\"u.location.country\"} */} Minsk</span>\r\n                        <span>{/*{\"u.location.city\"}*/}Belarus</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport styles from \"./Users.module.css\";\r\nimport Paginator from \"./Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount,\r\n                 pageSize, users, followingInProgress, unfollow, follow, ...props}) => {\r\n    return (\r\n        <div className={styles.users}>\r\n            <Paginator\r\n                currentPage={currentPage} onPageChanged={onPageChanged}\r\n                totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     key={u.id}\r\n                                     followingInProgress={followingInProgress}\r\n                                     unfollow={unfollow}\r\n                                     follow={follow}\r\n                />)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n};\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n     return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n     return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n     return state.usersPage.isFetching\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n     return state.usersPage.followingInProgress\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress, unfollow,\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                followingInProgress={this.props.followingInProgress}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    };\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setCurrentPage, toggleFollowingInProgress, getUsers: requestUsers, follow, unfollow}))(UsersContainer);\r\n","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n        <img src=\"http://up.desktx.net/pic_360/78/07/81/7807811d1ca6044bb826cf19f33d8cc4.jpg\"/>\r\n        <div className={classes.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n};\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'socialNetwork/auth/SET_USER_DATA';\r\n\r\nlet initialState =\r\n    {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth: false\r\n    };\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {email, id, login, isAuth}\r\n    };\r\n};\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', null, Input, {type: 'checkbox'}, 'remember me')}\r\n            {error && <div className={styles.formSummaryError}> {error} </div>}\r\n            <div><button>Login</button></div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <span>test login: free@samuraijs.com</span><br></br>\r\n            <span>test password: free</span>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState =\r\n    {\r\n        initialized: false\r\n    };\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS\r\n    };\r\n};\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","\r\nlet initialState = {};\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\"\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default  store;","import React, {Suspense, Component, lazy} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Suspense fallback={<Preloader/>}>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/login' render={() => <LoginPage/>}/>\n                    </Suspense>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\n\nconst AppContainer = compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n};\n\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\n\n//API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgName\":\"Friends_imgName__1jAC8\",\"container\":\"Friends_container__xsiPE\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta: {touched, error},children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                validate={validators}\r\n                component={component}\r\n                {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}/>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__poJqh\",\"error\":\"FormsControls_error__2dKzt\",\"formSummaryError\":\"FormsControls_formSummaryError__2zhWq\"};","\r\nexport const  required = (value) => {\r\n  if(value) return undefined;\r\n\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3scgo\",\"loginBlock\":\"Header_loginBlock__2w9Xw\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState =\r\n    {\r\n        posts: [\r\n            {id: 1, message: 'Hi, how are you feeling?', likesCount: 15, autor: \"Kolya\"},\r\n            {id: 2, message: 'Nice to meet you, bro', likesCount: 20, autor: \"Dima\"},\r\n            {id: 3, message: 'I love you my darling', likesCount: 5, autor: \"Sveta\"}\r\n        ],\r\n        profile: null,\r\n        status: ''\r\n    };\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            let newPost = {id: 4, message: action.newPostText, likesCount: 0, autor: \"Misha\"};\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        case 'DELETE_POST':\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n        case 'SET_STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case 'SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    };\r\n};\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    };\r\n};\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    };\r\n};\r\nexport const deletePost = (postId) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    };\r\n};export const savePhotoSuccess = (photos) => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        photos\r\n    };\r\n};\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\nexport default profileReducer;"],"sourceRoot":""}