{"version":3,"sources":["components/Friends/Friends.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/user.jpg","serviceWorker.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Friends/Friends.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","index.js","components/Dialogs/Dialogs.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","posts","id","message","likesCount","autor","newPostText","profileReducer","state","action","type","newPost","newText","dialogs","name","messages","newMessageText","dialogsReducer","text","sidebarReducer","users","usersReducer","map","u","userId","followed","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","store","createStore","Header","className","classes","header","src","Friends","container","avatar","imgName","alt","Navbar","props","nav","item","to","activeClassName","active","friends","Post","MyPosts","postsElements","post","newPostElement","React","createRef","postsBlock","onChange","current","value","updateNewPostText","ref","onClick","addPost","ProfileInfo","descriptionBlock","MyPostsContainer","connect","dispatch","updateNewPostTextActionCreator","Profile","News","Music","Settings","DialogItem","dialog","Message","Dialogs","dialogsElements","key","messagesElements","newMessageElement","dialogsItems","e","target","updateNewMessageText","placeholder","addMessage","DialogsContainer","updateNewMessageTextActionCreator","Users","axios","then","response","setUsers","data","items","styles","this","usersAvatar","photos","small","userPhoto","unfollow","follow","usersInfo","fullNameAndStatus","status","Component","followAC","unfollowAC","setUsersAC","App","class","path","render","UsersContainer","component","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e048ac4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgName\":\"Friends_imgName__1jAC8\",\"container\":\"Friends_container__xsiPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__dWEjg\",\"container\":\"Users_container__3_5nz\",\"userPhoto\":\"Users_userPhoto__2ONAc\",\"fullNameAndStatus\":\"Users_fullNameAndStatus__315q-\",\"location\":\"Users_location__1PsIW\",\"usersInfo\":\"Users_usersInfo__1McMf\",\"usersAvatar\":\"Users_usersAvatar__3e4OM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2o54H\",\"item\":\"Navbar_item__1kr_S\",\"active\":\"Navbar_active__2LXrb\",\"friends\":\"Navbar_friends__XvShx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2BQvk\",\"posts\":\"MyPosts_posts__3qXmg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3scgo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__111i7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3FLst\"};","module.exports = __webpack_public_path__ + \"static/media/user.ea7658a6.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState =\r\n    {\r\n        posts: [\r\n            {id: 1, message: 'Hi, how are you feeling?', likesCount: 15, autor: \"Kolya\"},\r\n            {id: 2, message: 'Nice to meet you, bro', likesCount: 20, autor: \"Dima\"},\r\n            {id: 3, message: 'I love you my darling', likesCount: 5, autor: \"Sveta\"}\r\n        ],\r\n        newPostText: 'it-kamasutra.com'\r\n    };\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            let newPost = {id: 4, message: state.newPostText, likesCount: 0, autor: \"Misha\"};\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case 'UPDATE-NEW-POST-TEXT':\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    };\r\n};\r\n\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    };\r\n};\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Kolya'},\r\n        {id: 2, name: 'Sveta'},\r\n        {id: 3, name: 'Dimych'},\r\n        {id: 4, name: 'Maksim'},\r\n        {id: 5, name: 'Dasha'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi, men!!!'},\r\n        {id: 2, message: 'Kate loves my hair!'},\r\n        {id: 3, message: 'YO, come on!'},\r\n        {id: 4, message: 'WOW, you are amazing!'},\r\n        {id: 5, message: 'Fuck your self, motherfucker'}\r\n    ],\r\n    newMessageText: 'it-incubator.com'\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case 'ADD-MESSAGE':\r\n            let text = state.newMessageText;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: text}],\r\n                newMessageText: ''\r\n            };\r\n        case 'UPDATE-NEW-MESSAGE-TEXT':\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = () => {\r\n    return {\r\n        type: ADD_MESSAGE\r\n    };\r\n};\r\n\r\nexport const updateNewMessageTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_TEXT,\r\n        newText: text\r\n    };\r\n};\r\n\r\nexport default dialogsReducer;","\r\nlet initialState = {};\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\nlet initialState =\r\n    {\r\n        users: [\r\n            /*{id: 1,\r\n                photoUrl: 'https://i.pinimg.com/236x/89/ed/b5/89edb568b29d891be761b4a94683fc9a--boston-celtics-borders-free.jpg',\r\n                followed: false,\r\n                fullName: 'Kolya',\r\n                status: 'Hi, how are you feeling?',\r\n                location: {city: 'Minsk', country: 'Belarus'}},\r\n            {id: 2,\r\n                photoUrl: 'https://i.pinimg.com/236x/89/ed/b5/89edb568b29d891be761b4a94683fc9a--boston-celtics-borders-free.jpg',\r\n                followed: true,\r\n                fullName: 'Dima',\r\n                status: 'Nice to meet you, bro',\r\n                location: {city: 'Kiev', country: 'Ukraine'}},\r\n            {id: 3,\r\n                photoUrl: 'https://i.pinimg.com/236x/89/ed/b5/89edb568b29d891be761b4a94683fc9a--boston-celtics-borders-free.jpg',\r\n                followed: false,\r\n                fullName: 'Sveta',\r\n                status: 'I love you my darling',\r\n                location: {city: 'Moscow', country: 'Russia'}},\r\n            {id: 4,\r\n                photoUrl: 'https://i.pinimg.com/236x/89/ed/b5/89edb568b29d891be761b4a94683fc9a--boston-celtics-borders-free.jpg',\r\n                followed: true,\r\n                fullName: 'Maksim',\r\n                status: 'I love basketball',\r\n                location: {city: 'London', country: 'Great Britain'}}*/\r\n        ]\r\n    };\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n              ...state,\r\n              users: state.users.map(u => {\r\n                  if(u.id === action.userId){\r\n                      return {...u, followed: true}\r\n                  }\r\n                  return u;\r\n              })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n              ...state,\r\n              users: state.users.map(u => {\r\n                  if (u.id === action.userId){\r\n                      return {...u, followed: false}\r\n                  }\r\n                  return u;\r\n              })\r\n            };\r\n        case SET_USERS:{\r\n            return {...state, users: [ ...state.users, ...action.users]}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followAC = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    };\r\n};\r\nexport const unfollowAC = (userId) => {\r\n    return{\r\n        type: UNFOLLOW,\r\n        userId\r\n    };\r\n};\r\nexport const setUsersAC = (users) => {\r\n    return{\r\n        type: SET_USERS,\r\n        users\r\n    };\r\n};\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default  store;","import React from 'react';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return <header className={classes.header}>\r\n        <img src=\"http://up.desktx.net/pic_360/78/07/81/7807811d1ca6044bb826cf19f33d8cc4.jpg\"/>\r\n    </header>\r\n};\r\nexport default Header;","import React from 'react';\r\nimport classes from './Friends.module.css';\r\n\r\nconst Friends = () => {\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.avatar}>\r\n            <div className={classes.imgName}>\r\n                <img src=\"http://cm1.narvii.com/7137/82dfdf5249f75571554874c604090c0c3a261c1e_00.jpg\" alt=\"Аватар\"/>\r\n                <div><span>Nima</span></div>\r\n            </div>\r\n            </div>\r\n            <div className={classes.avatar}>\r\n                <div className={classes.imgName}>\r\n                    <img src=\"http://cm1.narvii.com/7137/82dfdf5249f75571554874c604090c0c3a261c1e_00.jpg\" alt=\"Аватар\"/>\r\n                    <div><span>Kolya</span></div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.avatar}>\r\n                <div className={classes.imgName}>\r\n                    <img src=\"http://cm1.narvii.com/7137/82dfdf5249f75571554874c604090c0c3a261c1e_00.jpg\" alt=\"Аватар\"/>\r\n                    <div><span>Ibragim</span></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default Friends;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"../Friends/Friends\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.active}> Messages </NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.friends}>\r\n                <NavLink to=\"/friends\" activeClassName={classes.active}>Friends:</NavLink>\r\n                    <Friends/>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Navbar;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={classes.item}>\r\n        <span>{props.autor}</span>\r\n        <img src='https://sumopaint.com/images/icon.png'/>\r\n        {props.message}\r\n        <div>\r\n            <span>like</span>\r\n            {props.likesCount}\r\n        </div>\r\n    </div>\r\n\r\n};\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map(post => <Post message={post.message}\r\n                                                      likesCount={post.likesCount}\r\n                                                      autor={post.autor}\r\n                                                      id={post.id} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    };\r\n\r\n    return <div className={classes.postsBlock}>\r\n        <h3>my Posts</h3>\r\n        <div>\r\n            <div>\r\n                <textarea\r\n                    onChange={onPostChange}\r\n                    ref={newPostElement}\r\n                    value = {props.newPostText}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={onAddPost}>Add Post</button>\r\n            </div>\r\n        </div>\r\n        <div className={classes.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n};\r\nexport default MyPosts;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n    <div>\r\n        <div>\r\n            <img src=\"https://i.mycdn.me/image?id=887811879088&ts=000000000000b303ae&plc=WEB&tkn=*LgV_StN1kbinDLlMPUikx_HeW8M&fn=sqr_288\"/>\r\n        </div>\r\n        <div className={classes.descriptionBlock}>\r\n            ava + description\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text));\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n    <div>\r\n        <ProfileInfo/>\r\n        <MyPostsContainer\r\n            store={props.store}\r\n        />\r\n    </div>\r\n    );\r\n};\r\nexport default Profile;","import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from \"react\";\r\nimport classes from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img src='https://www.robinwieruch.de/static/63fc17d2f237ae4c3f61073a0436cf81/2b1a3/banner.jpg'/>\r\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n\r\n    let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id} id={message.id}/>);\r\n\r\n    let newMessageElement = state.newMessageText;\r\n\r\n    let onAddMessageClick = () => {\r\n        props.addMessage();\r\n    };\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let text = e.target.value;\r\n        props.updateNewMessageText(text);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                    <textarea\r\n                        value={newMessageElement}\r\n                        onChange={onNewMessageChange}\r\n                        placeholder='Enter your message'\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onAddMessageClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text));\r\n        },\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\nexport default DialogsContainer;","import React from 'react';\r\nimport styles from './Users.module.css'\r\nimport * as axios from \"axios\";\r\nimport userPhoto from '../../assets/images/user.jpg'\r\n\r\nclass Users extends React.Component{\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/users\")\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items);\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={styles.users}>\r\n                {\r\n                    this.props.users.map(u => <div key={u.id}>\r\n                        <div className={styles.container}>\r\n                            <div className={styles.usersAvatar}>\r\n                                <div>\r\n                                    <img src={u.photos.small !== null ? u.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                                </div>\r\n                                <div>\r\n                                    {u.followed\r\n                                        ? <button onClick={() => {\r\n                                            this.props.unfollow(u.id)\r\n                                        }}>Unfollow </button>\r\n                                        : <button onClick={() => {\r\n                                            this.props.follow(u.id)\r\n                                        }}>Follow</button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.usersInfo}>\r\n                                <div className={styles.fullNameAndStatus}>\r\n                                    <span>{u.name}</span>\r\n                                    <span>{u.status}</span>\r\n                                </div>\r\n                                <div className={styles.location}>\r\n                                    <span>{/*{\"u.location.country\"} */} Minsk</span>\r\n                                    <span>{/*{\"u.location.city\"}*/}Belarus</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n    export default Users;","import React from 'react';\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {followAC, setUsersAC, unfollowAC} from \"../../redux/users-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport {Route} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nconst App = (props) => {\n    return (\n        <div className=\"app-wrapper\">\n            <Header/>\n            <Navbar/>\n            <div class=\"app-wrapper-content\">\n                <Route path='/dialogs' render={() => <DialogsContainer store={props.store}\n                />}/>\n                <Route path='/profile' render={() => <Profile store={props.store}\n                />}/>\n                <Route path='/users' render={ () => <UsersContainer />}/>\n                <Route path='/news' component={News}/>\n                <Route path='/music' component={Music}/>\n                <Route path='/settings' component={Settings}/>\n            </div>\n\n        </div>\n    );\n};\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__36u7U\",\"dialogsItems\":\"Dialogs_dialogsItems__1IiGM\",\"active\":\"Dialogs_active__2Jh6t\",\"dialog\":\"Dialogs_dialog__2bL50\",\"messages\":\"Dialogs_messages__1xLqD\"};"],"sourceRoot":""}